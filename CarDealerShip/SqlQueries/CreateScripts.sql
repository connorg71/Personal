CREATE TABLE [dbo].[BodyStyles] (
    [Id] [int] NOT NULL IDENTITY,
    [Description] [nvarchar](max),
    CONSTRAINT [PK_dbo.BodyStyles] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[Colors] (
    [Id] [int] NOT NULL IDENTITY,
    [Description] [nvarchar](max),
    CONSTRAINT [PK_dbo.Colors] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[ContactForms] (
    [Id] [int] NOT NULL IDENTITY,
    [Name] [nvarchar](max),
    [Email] [nvarchar](max),
    [Phone] [nvarchar](max),
    [Message] [nvarchar](max),
    CONSTRAINT [PK_dbo.ContactForms] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[Interiors] (
    [Id] [int] NOT NULL IDENTITY,
    [Description] [nvarchar](max),
    CONSTRAINT [PK_dbo.Interiors] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[Makes] (
    [Id] [int] NOT NULL IDENTITY,
    [Description] [nvarchar](max),
    CONSTRAINT [PK_dbo.Makes] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[Purchases] (
    [Id] [int] NOT NULL IDENTITY,
    [VehicleId] [int] NOT NULL,
    [Phone] [nvarchar](max),
    [Email] [nvarchar](max),
    [Street1] [nvarchar](max),
    [Street2] [nvarchar](max),
    [City] [nvarchar](max),
    [State] [nvarchar](max),
    [ZipCode] [nvarchar](max),
    [SalePrice] [float] NOT NULL,
    [PurchaseDate] [datetime] NOT NULL,
    [SalesPersonId] [int] NOT NULL,
    [PurchaseType] [int] NOT NULL,
    CONSTRAINT [PK_dbo.Purchases] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[Specials] (
    [Id] [int] NOT NULL IDENTITY,
    [Description] [nvarchar](max),
    [Title] [nvarchar](max),
    CONSTRAINT [PK_dbo.Specials] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[Transmissions] (
    [Id] [int] NOT NULL IDENTITY,
    [Description] [nvarchar](max),
    CONSTRAINT [PK_dbo.Transmissions] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[VehicleModels] (
    [Id] [int] NOT NULL IDENTITY,
    [MakeId] [int] NOT NULL,
    [Description] [nvarchar](max),
    CONSTRAINT [PK_dbo.VehicleModels] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[Vehicles] (
    [Id] [int] NOT NULL IDENTITY,
    [ModelYear] [int] NOT NULL,
    [SalePrice] [float] NOT NULL,
    [Featured] [bit] NOT NULL,
    [Sold] [bit] NOT NULL,
    [Vin] [nvarchar](max),
    [Make] [int] NOT NULL,
    [Model] [int] NOT NULL,
    [Type] [int] NOT NULL,
    [BodyStyle] [int] NOT NULL,
    [Transmission] [int] NOT NULL,
    [Color] [int] NOT NULL,
    [Interior] [int] NOT NULL,
    [Mileage] [float] NOT NULL,
    [MSRP] [float] NOT NULL,
    [Description] [nvarchar](max),
    [PictureUrl] [nvarchar](max),
    CONSTRAINT [PK_dbo.Vehicles] PRIMARY KEY ([Id])
)
CREATE TABLE [dbo].[VehicleTypes] (
    [Id] [int] NOT NULL IDENTITY,
    [Description] [nvarchar](max),
    CONSTRAINT [PK_dbo.VehicleTypes] PRIMARY KEY ([Id])
)
GO

CREATE PROCEDURE [dbo].[BodyStyle_Insert]
    @Description [nvarchar](max)
AS
BEGIN
    INSERT [dbo].[BodyStyles]([Description])
    VALUES (@Description)
    
    DECLARE @Id int
    SELECT @Id = [Id]
    FROM [dbo].[BodyStyles]
    WHERE @@ROWCOUNT > 0 AND [Id] = scope_identity()
    
    SELECT t0.[Id]
    FROM [dbo].[BodyStyles] AS t0
    WHERE @@ROWCOUNT > 0 AND t0.[Id] = @Id
END
GO

CREATE PROCEDURE [dbo].[BodyStyle_Update]
    @Id [int],
    @Description [nvarchar](max)
AS
BEGIN
    UPDATE [dbo].[BodyStyles]
    SET [Description] = @Description
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[BodyStyle_Delete]
    @Id [int]
AS
BEGIN
    DELETE [dbo].[BodyStyles]
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Color_Insert]
    @Description [nvarchar](max)
AS
BEGIN
    INSERT [dbo].[Colors]([Description])
    VALUES (@Description)
    
    DECLARE @Id int
    SELECT @Id = [Id]
    FROM [dbo].[Colors]
    WHERE @@ROWCOUNT > 0 AND [Id] = scope_identity()
    
    SELECT t0.[Id]
    FROM [dbo].[Colors] AS t0
    WHERE @@ROWCOUNT > 0 AND t0.[Id] = @Id
END
GO

CREATE PROCEDURE [dbo].[Color_Update]
    @Id [int],
    @Description [nvarchar](max)
AS
BEGIN
    UPDATE [dbo].[Colors]
    SET [Description] = @Description
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Color_Delete]
    @Id [int]
AS
BEGIN
    DELETE [dbo].[Colors]
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[ContactForm_Insert]
    @Name [nvarchar](max),
    @Email [nvarchar](max),
    @Phone [nvarchar](max),
    @Message [nvarchar](max)
AS
BEGIN
    INSERT [dbo].[ContactForms]([Name], [Email], [Phone], [Message])
    VALUES (@Name, @Email, @Phone, @Message)
    
    DECLARE @Id int
    SELECT @Id = [Id]
    FROM [dbo].[ContactForms]
    WHERE @@ROWCOUNT > 0 AND [Id] = scope_identity()
    
    SELECT t0.[Id]
    FROM [dbo].[ContactForms] AS t0
    WHERE @@ROWCOUNT > 0 AND t0.[Id] = @Id
END
GO

CREATE PROCEDURE [dbo].[ContactForm_Update]
    @Id [int],
    @Name [nvarchar](max),
    @Email [nvarchar](max),
    @Phone [nvarchar](max),
    @Message [nvarchar](max)
AS
BEGIN
    UPDATE [dbo].[ContactForms]
    SET [Name] = @Name, [Email] = @Email, [Phone] = @Phone, [Message] = @Message
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[ContactForm_Delete]
    @Id [int]
AS
BEGIN
    DELETE [dbo].[ContactForms]
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Interior_Insert]
    @Description [nvarchar](max)
AS
BEGIN
    INSERT [dbo].[Interiors]([Description])
    VALUES (@Description)
    
    DECLARE @Id int
    SELECT @Id = [Id]
    FROM [dbo].[Interiors]
    WHERE @@ROWCOUNT > 0 AND [Id] = scope_identity()
    
    SELECT t0.[Id]
    FROM [dbo].[Interiors] AS t0
    WHERE @@ROWCOUNT > 0 AND t0.[Id] = @Id
END
GO

CREATE PROCEDURE [dbo].[Interior_Update]
    @Id [int],
    @Description [nvarchar](max)
AS
BEGIN
    UPDATE [dbo].[Interiors]
    SET [Description] = @Description
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Interior_Delete]
    @Id [int]
AS
BEGIN
    DELETE [dbo].[Interiors]
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Make_Insert]
    @Description [nvarchar](max)
AS
BEGIN
    INSERT [dbo].[Makes]([Description])
    VALUES (@Description)
    
    DECLARE @Id int
    SELECT @Id = [Id]
    FROM [dbo].[Makes]
    WHERE @@ROWCOUNT > 0 AND [Id] = scope_identity()
    
    SELECT t0.[Id]
    FROM [dbo].[Makes] AS t0
    WHERE @@ROWCOUNT > 0 AND t0.[Id] = @Id
END
GO

CREATE PROCEDURE [dbo].[Make_Update]
    @Id [int],
    @Description [nvarchar](max)
AS
BEGIN
    UPDATE [dbo].[Makes]
    SET [Description] = @Description
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Make_Delete]
    @Id [int]
AS
BEGIN
    DELETE [dbo].[Makes]
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Purchase_Insert]
    @VehicleId [int],
    @Phone [nvarchar](max),
    @Email [nvarchar](max),
    @Street1 [nvarchar](max),
    @Street2 [nvarchar](max),
    @City [nvarchar](max),
    @State [nvarchar](max),
    @ZipCode [nvarchar](max),
    @SalePrice [float],
    @PurchaseDate [datetime],
    @SalesPersonId [int],
    @PurchaseType [int]
AS
BEGIN
    INSERT [dbo].[Purchases]([VehicleId], [Phone], [Email], [Street1], [Street2], [City], [State], [ZipCode], [SalePrice], [PurchaseDate], [SalesPersonId], [PurchaseType])
    VALUES (@VehicleId, @Phone, @Email, @Street1, @Street2, @City, @State, @ZipCode, @SalePrice, @PurchaseDate, @SalesPersonId, @PurchaseType)
    
    DECLARE @Id int
    SELECT @Id = [Id]
    FROM [dbo].[Purchases]
    WHERE @@ROWCOUNT > 0 AND [Id] = scope_identity()
    
    SELECT t0.[Id]
    FROM [dbo].[Purchases] AS t0
    WHERE @@ROWCOUNT > 0 AND t0.[Id] = @Id
END
GO

CREATE PROCEDURE [dbo].[Purchase_Update]
    @Id [int],
    @VehicleId [int],
    @Phone [nvarchar](max),
    @Email [nvarchar](max),
    @Street1 [nvarchar](max),
    @Street2 [nvarchar](max),
    @City [nvarchar](max),
    @State [nvarchar](max),
    @ZipCode [nvarchar](max),
    @SalePrice [float],
    @PurchaseDate [datetime],
    @SalesPersonId [int],
    @PurchaseType [int]
AS
BEGIN
    UPDATE [dbo].[Purchases]
    SET [VehicleId] = @VehicleId, [Phone] = @Phone, [Email] = @Email, [Street1] = @Street1, [Street2] = @Street2, [City] = @City, [State] = @State, [ZipCode] = @ZipCode, [SalePrice] = @SalePrice, [PurchaseDate] = @PurchaseDate, [SalesPersonId] = @SalesPersonId, [PurchaseType] = @PurchaseType
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Purchase_Delete]
    @Id [int]
AS
BEGIN
    DELETE [dbo].[Purchases]
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Special_Insert]
    @Description [nvarchar](max),
    @Title [nvarchar](max)
AS
BEGIN
    INSERT [dbo].[Specials]([Description], [Title])
    VALUES (@Description, @Title)
    
    DECLARE @Id int
    SELECT @Id = [Id]
    FROM [dbo].[Specials]
    WHERE @@ROWCOUNT > 0 AND [Id] = scope_identity()
    
    SELECT t0.[Id]
    FROM [dbo].[Specials] AS t0
    WHERE @@ROWCOUNT > 0 AND t0.[Id] = @Id
END
GO

CREATE PROCEDURE [dbo].[Special_Update]
    @Id [int],
    @Description [nvarchar](max),
    @Title [nvarchar](max)
AS
BEGIN
    UPDATE [dbo].[Specials]
    SET [Description] = @Description, [Title] = @Title
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Special_Delete]
    @Id [int]
AS
BEGIN
    DELETE [dbo].[Specials]
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Transmission_Insert]
    @Description [nvarchar](max)
AS
BEGIN
    INSERT [dbo].[Transmissions]([Description])
    VALUES (@Description)
    
    DECLARE @Id int
    SELECT @Id = [Id]
    FROM [dbo].[Transmissions]
    WHERE @@ROWCOUNT > 0 AND [Id] = scope_identity()
    
    SELECT t0.[Id]
    FROM [dbo].[Transmissions] AS t0
    WHERE @@ROWCOUNT > 0 AND t0.[Id] = @Id
END
GO

CREATE PROCEDURE [dbo].[Transmission_Update]
    @Id [int],
    @Description [nvarchar](max)
AS
BEGIN
    UPDATE [dbo].[Transmissions]
    SET [Description] = @Description
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Transmission_Delete]
    @Id [int]
AS
BEGIN
    DELETE [dbo].[Transmissions]
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[VehicleModel_Insert]
    @MakeId [int],
    @Description [nvarchar](max)
AS
BEGIN
    INSERT [dbo].[VehicleModels]([MakeId], [Description])
    VALUES (@MakeId, @Description)
    
    DECLARE @Id int
    SELECT @Id = [Id]
    FROM [dbo].[VehicleModels]
    WHERE @@ROWCOUNT > 0 AND [Id] = scope_identity()
    
    SELECT t0.[Id]
    FROM [dbo].[VehicleModels] AS t0
    WHERE @@ROWCOUNT > 0 AND t0.[Id] = @Id
END
GO

CREATE PROCEDURE [dbo].[VehicleModel_Update]
    @Id [int],
    @MakeId [int],
    @Description [nvarchar](max)
AS
BEGIN
    UPDATE [dbo].[VehicleModels]
    SET [MakeId] = @MakeId, [Description] = @Description
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[VehicleModel_Delete]
    @Id [int]
AS
BEGIN
    DELETE [dbo].[VehicleModels]
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Vehicle_Insert]
    @ModelYear [int],
    @SalePrice [float],
    @Featured [bit],
    @Sold [bit],
    @Vin [nvarchar](max),
    @Make [int],
    @Model [int],
    @Type [int],
    @BodyStyle [int],
    @Transmission [int],
    @Color [int],
    @Interior [int],
    @Mileage [float],
    @MSRP [float],
    @Description [nvarchar](max),
    @PictureUrl [nvarchar](max)
AS
BEGIN
    INSERT [dbo].[Vehicles]([ModelYear], [SalePrice], [Featured], [Sold], [Vin], [Make], [Model], [Type], [BodyStyle], [Transmission], [Color], [Interior], [Mileage], [MSRP], [Description], [PictureUrl])
    VALUES (@ModelYear, @SalePrice, @Featured, @Sold, @Vin, @Make, @Model, @Type, @BodyStyle, @Transmission, @Color, @Interior, @Mileage, @MSRP, @Description, @PictureUrl)
    
    DECLARE @Id int
    SELECT @Id = [Id]
    FROM [dbo].[Vehicles]
    WHERE @@ROWCOUNT > 0 AND [Id] = scope_identity()
    
    SELECT t0.[Id]
    FROM [dbo].[Vehicles] AS t0
    WHERE @@ROWCOUNT > 0 AND t0.[Id] = @Id
END
GO

CREATE PROCEDURE [dbo].[Vehicle_Update]
    @Id [int],
    @ModelYear [int],
    @SalePrice [float],
    @Featured [bit],
    @Sold [bit],
    @Vin [nvarchar](max),
    @Make [int],
    @Model [int],
    @Type [int],
    @BodyStyle [int],
    @Transmission [int],
    @Color [int],
    @Interior [int],
    @Mileage [float],
    @MSRP [float],
    @Description [nvarchar](max),
    @PictureUrl [nvarchar](max)
AS
BEGIN
    UPDATE [dbo].[Vehicles]
    SET [ModelYear] = @ModelYear, [SalePrice] = @SalePrice, [Featured] = @Featured, [Sold] = @Sold, [Vin] = @Vin, [Make] = @Make, [Model] = @Model, [Type] = @Type, [BodyStyle] = @BodyStyle, [Transmission] = @Transmission, [Color] = @Color, [Interior] = @Interior, [Mileage] = @Mileage, [MSRP] = @MSRP, [Description] = @Description, [PictureUrl] = @PictureUrl
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[Vehicle_Delete]
    @Id [int]
AS
BEGIN
    DELETE [dbo].[Vehicles]
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[VehicleType_Insert]
    @Description [nvarchar](max)
AS
BEGIN
    INSERT [dbo].[VehicleTypes]([Description])
    VALUES (@Description)
    
    DECLARE @Id int
    SELECT @Id = [Id]
    FROM [dbo].[VehicleTypes]
    WHERE @@ROWCOUNT > 0 AND [Id] = scope_identity()
    
    SELECT t0.[Id]
    FROM [dbo].[VehicleTypes] AS t0
    WHERE @@ROWCOUNT > 0 AND t0.[Id] = @Id
END
GO

CREATE PROCEDURE [dbo].[VehicleType_Update]
    @Id [int],
    @Description [nvarchar](max)
AS
BEGIN
    UPDATE [dbo].[VehicleTypes]
    SET [Description] = @Description
    WHERE ([Id] = @Id)
END
GO

CREATE PROCEDURE [dbo].[VehicleType_Delete]
    @Id [int]
AS
BEGIN
    DELETE [dbo].[VehicleTypes]
    WHERE ([Id] = @Id)
END
INSERT [dbo].[__MigrationHistory]([MigrationId], [ContextKey], [Model], [ProductVersion])
VALUES (N'201805180135055_addBusinessEntities', N'CarDealerShip.Repository.Migrations.Configuration',  

